### This is a specification for general VDXF keys to be used to define and represent digital art NFTs

### These are *general* URIs
### In implementation these general URIs should be hashed together with a VerusID (using the getvdfxid api) to obtain globally unique identifiers for each element

### In implementation, globally unique tags that are generated shall be used as a --tag-name on each data element uploaded to a storage account
### The applicable storage account shall be referenced in the contentmap of the VerusID that controls the NFT digital art

### Data elements that make up the NFT object may be uploaded to data storage modularly
### All uploaded data elements should be tagged with the *Fundamental Tag*
### The "root" data element should be tagged with the Fundamental Tag plus a tag indicating that this is the root element
### Modular elements of the object not contained in the root element should also be tagged with a Modular Element Tag

### Apps that retrieve and render NFT digital art on behalf of a VerusID may consult the contentmap to locate a storage account where such VerusID holds its collections of data
### The app may then generate the globally unique identifier corresponding to the Fundamental Tag when hashed together with the VerusID
### The app may then query the storage account for all data elements that contain the Fundamental Tag

### A VerusID may control an unlimited number of NFTs????

### The Fundamental Tag

vrsc::system.nft.art

### Tag Indicating Root Element

vrsc::system.nft.art.root

### Required Contents of the Root element

{
    "<globally unique identifier when hashed with ID>": {
      “status”: “<active or deleted>”
    }
}

### Optional Contents of the Root element

--- Any modular element (described below) may be optionally included as a json element within the Root element rather than being uploaded and tagged separately as a modular element

### Apps shall begin by retrieving the most recent storage transaction that contains the Root Element
### If the status in this element is "deleted", no data is returned and the retrieval operation is ended
### If the status in this element is "active", the rest of the element is considered, as are all of the other grouped and sorted elements as described below

### Tags and Content for each Modular Element

### The image element

vrsc::system.art.nft.image

### The image may be returned directly by the transaction, or may be a json element providing a URL for the image

{
    "<globally unique identifier when hashed with ID>":  {
      "image":"url"
    }
}
